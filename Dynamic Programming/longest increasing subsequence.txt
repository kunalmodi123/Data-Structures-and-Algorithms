1. lis O(N^2)

    int longestSubsequence(int n, int a[])
    {
       int lis[n];
       int ans = 0;
       for(int i=0; i<n; i++){
           lis[i] = 1;
           for(int j=0; j<i; j++){
               if(a[j] < a[i])
                lis[i] = max(lis[i], lis[j] + 1);
           }
           ans = max(ans, lis[i]);
       }
       
       return ans;
    }
    
2. lis using binary search O(NlogN)

    int longestSubsequence(int n, int a[])
    {
       vector<int> lis;
       for(int i=0; i<n; i++){
           if(i == 0 || lis.back() < a[i])
                lis.push_back(a[i]);
            else{
                int ind = lower_bound(lis.begin(), lis.end(), a[i]) - lis.begin();
                lis[ind] = a[i];
            }
       }
       
       return lis.size();
    }